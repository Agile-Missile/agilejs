name: ReleaseOrVersionPR

on:
  push:
    branches:
      - main

jobs:
  release:
    if: ${{ github.repository == 'Agile-Missile/agilejs' && contains('refs/heads/main', github.ref) }}
    name: Release and changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ─── 1. 安装并激活 Stable Rust + wasm32-wasip1 ─────────────────────────
      - name: Setup Rust (actions-rs/toolchain)  
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true        # ← 强制把 stable 设为 default
          components: rustfmt, clippy
          targets: wasm32-wasip1 # ← 一步到位同时安装 Wasm 目标

      - name: Verify Rust toolchain  
        run: |
          rustup show                # 确认 stable 已被标为 default
          rustup toolchain list       # 列出所有安装好的 toolchain
          rustc --version             # Rust 编译器版本检查
          cargo --version             # Cargo 版本检查

      - name: build rust
        working-directory: crates/transform-swc-plugin
        run: |
          yarn clean

      - name: build transform-swc-plugin
        working-directory: crates/transform-swc-plugin
        run: |
          yarn build

      # ─── 2. Node + Yarn 环境 ─────────────────────────────────────────────────
      - name: Setup Node  
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Monorepo install  
        uses: ./.github/actions/yarn-nm-install

      # ─── 3. Changesets 发布／PR 流程 ───────────────────────────────────────────
      - name: Create Release Pull Request or Publish to npm  
        id: changesets
        uses: changesets/action@v1
        with:
          publish: yarn g:release
          cwd: ${{ github.workspace }}
          title: '[Release] Version packages'
        env:
          HOME: ${{ github.workspace }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
